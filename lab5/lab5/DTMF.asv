%DTMF.m
%Skyler Szot
%opens a wav file and decodes the corresponding digit

clear all;
close all;

[data, fsamp] = audioread('dtmf001.wav'); %no need for expansion

npts = 2000; %number of points
freqDiv=fsamp/npts; %calculate frequency axis
freq=freqDiv*(0:npts/2-1);

figure;
DFT = myDFT(data,npts); %calculate DFT
P = 20*log10(abs(DFT)); %translate to log scale
plot(freq, P) %plot periodogram

[pks,locs] = findpeaks(P); %use built in to find peaks
threshold = 40; %threshold to remove all but actual tones
realloc = []; %initialize real locations array

for i = 1:length(pks)
    if pks(i) > threshold %filter
        realloc = [realloc, freq(locs(i))]; %append to real location array
    end
end
%round to nearest actual value
roundTargets = [697, 770, 852, 941, 1209, 1336, 1477, 1633];
vRounded = interp1(roundTargets,roundTargets,realloc,'nearest')
%tran
x = getNum(vRounded(1),vRounded(2))
soundsc(data,fsamp)